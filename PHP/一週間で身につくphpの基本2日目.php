<?php
  $a = 123;
  $b = 345;
  $c = $a + $b;
?>

PHPの`array_`で始まる関数には、多くの便利なものがあります。ここでは、その一部を紹介します。

### 基本操作

1. **`array_push`**: 配列の末尾に1つ以上の要素を追加します。
2. **`array_pop`**: 配列の最後の要素を取り除き、その値を返します。
3. **`array_shift`**: 配列の最初の要素を取り除き、その値を返します。
4. **`array_unshift`**: 配列の最初に1つ以上の要素を追加します。

### 検索・フィルタリング

5. **`array_filter`**: コールバック関数に従って配列の要素をフィルタリングします。
6. **`array_search`**: 配列の中から指定した値を検索し、そのキーを返します。
7. **`array_keys`**: 配列のすべてのキーを取得します。
8. **`array_values`**: 配列のすべての値を取得します。

### 並べ替え・ソート

9. **`array_sort`**: 配列を昇順にソートします（数値キーを持つ配列のみに影響）。
10. **`array_reverse`**: 配列を逆順にします。
11. **`array_merge`**: 1つ以上の配列をマージします。
12. **`array_diff`**: 2つ以上の配列の差を比較して違いを返します。

### 配列操作

13. **`array_map`**: 配列のすべての要素にコールバック関数を適用します。
14. **`array_reduce`**: 配列を反復処理し、値を1つに縮約します。
15. **`array_slice`**: 配列の一部を取り出します。
16. **`array_splice`**: 配列の一部を置き換えます。

### 配列情報取得

17. **`array_sum`**: 配列のすべての値の合計を計算します。
18. **`array_product`**: 配列のすべての値の積を計算します。
19. **`array_count_values`**: 配列の中の各要素の出現回数を数えます。
20. **`array_unique`**: 配列の重複する値を取り除きます。

### 特殊用途

21. **`array_combine`**: 2つの配列から1つの連想配列を作成します（1つ目の配列がキー、2つ目が値）。
22. **`array_column`**: 多次元配列の特定の列を抽出します。
23. **`array_walk`**: 配列の各要素にコールバック関数を適用します。
24. **`array_chunk`**: 配列を指定されたサイズで分割します。
25. **`array_intersect`**: 2つ以上の配列の共通部分を返します。

これらはPHPにおける配列操作の一部ですが、これらの関数を組み合わせることで、複雑な配列操作を効率的に行うことができます。詳細については、各関数のPHPマニュアルを見ると良いでしょう。
